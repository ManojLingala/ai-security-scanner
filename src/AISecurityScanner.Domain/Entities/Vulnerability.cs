using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using AISecurityScanner.Domain.Enums;

namespace AISecurityScanner.Domain.Entities
{
    public class Vulnerability : BaseEntity
    {
        [Required]
        public Guid SecurityScanId { get; set; }
        
        [Required]
        [MaxLength(100)]
        public string Type { get; set; } = string.Empty;
        
        [Required]
        public VulnerabilitySeverity Severity { get; set; }
        
        [Required]
        [MaxLength(500)]
        public string FilePath { get; set; } = string.Empty;
        
        public int LineNumber { get; set; }
        public int? EndLineNumber { get; set; }
        public int? ColumnNumber { get; set; }
        
        [Required]
        [MaxLength(2000)]
        public string Description { get; set; } = string.Empty;
        
        [MaxLength(2000)]
        public string? Recommendation { get; set; }
        
        public bool IsAIGenerated { get; set; }
        public decimal Confidence { get; set; }
        
        [MaxLength(20)]
        public string? CVE { get; set; }
        
        [MaxLength(20)]
        public string? CWE { get; set; }
        
        [MaxLength(50)]
        public string? OWASPCategory { get; set; }
        
        public VulnerabilityStatus Status { get; set; } = VulnerabilityStatus.Open;
        
        [MaxLength(5000)]
        public string? CodeSnippet { get; set; }
        
        [MaxLength(5000)]
        public string? FixedCodeSnippet { get; set; }
        
        public bool IsFalsePositive { get; set; }
        
        [MaxLength(1000)]
        public string? FalsePositiveReason { get; set; }
        
        public Guid? ReviewedByUserId { get; set; }
        public DateTime? ReviewedAt { get; set; }
        
        [MaxLength(100)]
        public string? DetectionEngine { get; set; }
        
        public virtual SecurityScan SecurityScan { get; set; } = null!;
        public virtual User? ReviewedByUser { get; set; }
        public virtual ICollection<VulnerabilityComment> Comments { get; set; } = new List<VulnerabilityComment>();
    }
}